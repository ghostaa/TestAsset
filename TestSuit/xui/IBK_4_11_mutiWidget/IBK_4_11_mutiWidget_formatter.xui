<?xml version="1.0" encoding="GB18030"?>
<XUI xmlns="http://btt.cn.ibm.com/xui/2.0" bounds="115,110,1083,300" dataBinding="{'ctxType':'proc','ctxFile':'IBK_4_11_mutiWidgetFlow','ctxName':'IBK_4_11_mutiWidgetCtx'}" isRuleDirty="false" extraInfo="{'lastGeneratedRuleFile':'IBK_4_11_mutiWidget_formatter.js'}">
  <styles/>
  <container name="Panel" id="panel">
    <gridData heightHint="300" verticalAlignment="1" widthHint="1083" heightType="AutoSize" widthType="AutoSize" relativeWidth="0" relativeHeight="0" inlineStyle="{}" horizontalIndentType="FixedSize"/>
    <widget name="PlaceHolder">
      <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
      <container name="Panel" id="panel01">
        <gridData verticalAlignment="1" heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
        <widget name="PlaceHolder">
          <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
          <widget name="Label" id="label" text="IBK33658">
            <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
          </widget>
          <gridLayout numColumns="0"/>
        </widget>
        <gridLayout numColumns="1"/>
      </container>
      <gridLayout numColumns="0"/>
    </widget>
    <widget name="PlaceHolder">
      <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
      <gridLayout numColumns="0"/>
    </widget>
    <widget name="PlaceHolder">
      <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
      <container name="Panel" id="panel03">
        <gridData verticalAlignment="1" heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
        <widget name="PlaceHolder">
          <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
          <container name="Form" id="form">
            <gridData verticalAlignment="1" heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
            <widget name="PlaceHolder">
              <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
              <container name="Panel" id="panel04">
                <gridData verticalAlignment="1" heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                <widget name="PlaceHolder">
                  <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                  <widget name="Label" id="label03" text="test validation(Must input number)">
                    <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                  </widget>
                  <gridLayout numColumns="0"/>
                </widget>
                <widget name="PlaceHolder">
                  <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                  <widget name="Text" dataName="{'ctxType':'proc','ctxFile':'IBK_4_11_mutiWidgetFlow','ctxName':'IBK_4_11_mutiWidgetCtx','dataName':'testValidation'}" id="text">
                    <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                  </widget>
                  <gridLayout numColumns="0"/>
                </widget>
                <widget name="PlaceHolder">
                  <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                  <widget name="Label" id="label01" text="LabelOne">
                    <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                  </widget>
                  <gridLayout numColumns="0"/>
                </widget>
                <widget name="PlaceHolder">
                  <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                  <widget name="Text" id="text01">
                    <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                  </widget>
                  <gridLayout numColumns="0"/>
                </widget>
                <gridLayout numColumns="2"/>
              </container>
              <gridLayout numColumns="0"/>
            </widget>
            <widget name="PlaceHolder">
              <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
              <widget name="Table" dataNameForList="{'ctxType':'proc','ctxFile':'IBK_4_11_mutiWidgetFlow','ctxName':'IBK_4_11_mutiWidgetCtx','dataName':'TestMutiWidgetList'}" dataName="{'ctxType':'proc','ctxFile':'IBK_4_11_mutiWidgetFlow','ctxName':'IBK_4_11_mutiWidgetCtx','dataName':'singleResult'}" id="table">
                <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
                <column widthType="FixedSize" sortPriority="1" level="1" rowSpan="1" widget="" width="30" rowCSS="" headerHAlign="16384" colSpan="1" hidden="false" text="A" noresize="false" dataName="Field1" relativeWidth="1" id="columnId0" repeat="true" headerVAlign="16384">
                  <tableColumnAlignment>16384</tableColumnAlignment>
                </column>
                <column widthType="FixedSize" sortPriority="1" level="1" rowSpan="1" widget="" width="30" rowCSS="" headerHAlign="16384" colSpan="1" hidden="false" text="B" noresize="false" dataName="Field2" relativeWidth="1" id="columnId1" repeat="true" headerVAlign="16384">
                  <tableColumnAlignment>16384</tableColumnAlignment>
                </column>
                <column widthType="FixedSize" sortPriority="1" level="1" rowSpan="1" widget="" width="30" rowCSS="" headerHAlign="16384" colSpan="1" hidden="false" text="C" noresize="false" dataName="Field3" relativeWidth="1" id="columnId2" repeat="true" headerVAlign="16384">
                  <tableColumnAlignment>16384</tableColumnAlignment>
                </column>
                <column widthType="FixedSize" sortPriority="1" level="1" rowSpan="1" widget="" width="10" rowCSS="" headerHAlign="16384" colSpan="1" hidden="false" text="D" noresize="false" dataName="flag" relativeWidth="1" id="columnId4" repeat="true" headerVAlign="16384">
                  <tableColumnAlignment>16384</tableColumnAlignment>
                </column>
                <column widthType="FixedSize" sortPriority="1" editable="false" level="1" rowSpan="1" widget="Content" width="320" rowCSS="" hidden="false" formatter="function(data, rowIndex, grid) {
console.log('column data:' + data); 

addEvent(rowIndex, 'button1', 'onClick', function(index, widgetId, widget, rowWidgets) {
 for(var i = 0; i &lt; rowWidgets.length; i ++ ) {
  if(rowWidgets[i].cellWidgetId == 'button2') {
   if(rowWidgets[i].get('visibility') == 'visible') {
    rowWidgets[i].set('visibility', 'gone');
    setState(index, 'button2', 'visibility', 'gone');
   } else if(rowWidgets[i].get('visibility') == 'gone') {
    rowWidgets[i].set('visibility', 'visible');
    setState(index, 'button2', 'visibility', 'visible');
   }
  }
 }
});

addStateInit(rowIndex, 'button2', function(index, widgetId, widget, widgets, state) {
 if(state['visibility']) {
  widget.set('visibility', state['visibility']);
 }
});

addEvent(rowIndex, 'button2', 'onClick', function(index, widgetId, widget, rowWidgets) {
 for(var i = 0; i &lt; rowWidgets.length; i ++ ) {
  if(rowWidgets[i].cellWidgetId == 'button1') {
   console.log(rowWidgets[i].get('disabled'));
   if(rowWidgets[i].get('disabled') == true) {
    rowWidgets[i].set('disabled', false);
    setState(index, 'button1', 'disabled', false);
   } else if(rowWidgets[i].get('disabled') == false) {
    rowWidgets[i].set('disabled', true);
    setState(index, 'button1', 'disabled', true);
   }
  }
 }
});

addStateInit(rowIndex, 'button1', function(index, widgetId, widget, widgets, state) {
 if(state['disabled']) {
  widget.set('disabled', state['disabled']);
 }
});

addEvent(rowIndex, 'button3', 'onClick', function(index, widgetId, widget, rowWidgets) {
 for(var i = 0; i &lt; rowWidgets.length; i ++ ) {
  if(rowWidgets[i].cellWidgetId == 'link1') {
   if(rowWidgets[i].get('visibility') == 'visible') {
    rowWidgets[i].set('visibility', 'gone');
    setState(index, 'link1', 'visibility', 'gone');
   } else if(rowWidgets[i].get('visibility') == 'gone') {
    rowWidgets[i].set('visibility', 'visible');
    setState(index, 'link1', 'visibility', 'visible');
   }
  }
 }
});

addStateInit(rowIndex, 'link1', function(index, widgetId, widget, widgets, state) {
 if(state['visibility']) {
  widget.set('visibility', state['visibility']);
 }
});


var flagValue = parseInt(grid.store.getValue(grid.getItem(rowIndex), 'flag'));
console.log(flagValue);
if(flagValue % 4 == 0) {
return 
'&lt;div cellWidgetId=\&quot;button1\&quot; type=\&quot;button\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;visibility\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;button2\&quot; type=\&quot;button\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;disabled\&quot; &gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;button3\&quot; type=\&quot;button\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;hidden \'visibility\' link\&quot; &gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;button4\&quot; type=\&quot;button\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;hidden LabelOne\&quot; &gt;&lt;/div&gt;';

}
else if (flagValue % 4 == 1){
return  

'&lt;div cellWidgetId=\&quot;submitButton1\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;changeEvt\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','flowEvent':'next' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;submitButton2\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new flow\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','flowId':'IBK_4_11_mutiWidget_newFlow' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;submitButton3\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new operation\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','operationId':'IBK_4_11_MutiWidgetNewOp' })  +'\&quot;&gt;&lt;/div&gt;' +
'submit ';
} else if (flagValue % 4 == 2){
return  

'&lt;div cellWidgetId=\&quot;saveButton1\&quot; type=\&quot;save\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;changeEvt\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'save','flowEvent':'next' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;saveButton2\&quot; type=\&quot;save\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new flow\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'save','flowId':'IBK_4_11_mutiWidget_newFlow' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;saveButton3\&quot; type=\&quot;save\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new operation\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'save','operationId':'IBK_4_11_MutiWidgetNewOp' })  +'\&quot;&gt;&lt;/div&gt;' +
'submit without validation ';
}else if (flagValue % 4 == 3){
return  

'&lt;div cellWidgetId=\&quot;cancelButton1\&quot; type=\&quot;cancel\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;changeEvt\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','flowEvent':'next' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;cancelButton2\&quot; type=\&quot;cancel\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new flow\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','flowId':'IBK_4_11_mutiWidget_newFlow' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;cancelButton3\&quot; type=\&quot;cancel\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new operation\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','operationId':'IBK_4_11_MutiWidgetNewOp' })  +'\&quot;&gt;&lt;/div&gt;' +
'submit no data ' ;
}    
}" headerHAlign="16384" colSpan="1" text="ButtonFormatter" noresize="false" relativeWidth="1" id="columnId3" repeat="true" headerVAlign="16384">
                  <tableColumnAlignment>16384</tableColumnAlignment>
                </column>
                <column widthType="FixedSize" sortPriority="1" editable="false" level="1" rowSpan="1" widget="Content" width="300" rowCSS="" hidden="false" formatter="function(data, rowIndex, grid) {
console.log('column data:' + data); 

addEvent(rowIndex, 'link1', 'onClick', function(index, widgetId, widget, rowWidgets) {
 for(var i = 0; i &lt; rowWidgets.length; i ++ ) {
  if(rowWidgets[i].cellWidgetId == 'link2') {
   if(rowWidgets[i].get('visibility') == 'visible') {
    rowWidgets[i].set('visibility', 'gone');
    setState(index, 'link2', 'visibility', 'gone');
   } else if(rowWidgets[i].get('visibility') == 'gone') {
    rowWidgets[i].set('visibility', 'visible');
    setState(index, 'link2', 'visibility', 'visible');
   }
  }
 }
});

addStateInit(rowIndex, 'link2', function(index, widgetId, widget, widgets, state) {
 if(state['visibility']) {
  widget.set('visibility', state['visibility']);
 }
});

addEvent(rowIndex, 'link2', 'onClick', function(index, widgetId, widget, rowWidgets) {
 for(var i = 0; i &lt; rowWidgets.length; i ++ ) {
  if(rowWidgets[i].cellWidgetId == 'link1') {
   console.log(rowWidgets[i].get('disabled'));
   if(rowWidgets[i].get('disabled') == true) {
    rowWidgets[i].set('disabled', false);
    setState(index, 'link1', 'disabled', false);
   } else if(rowWidgets[i].get('disabled') == false) {
    rowWidgets[i].set('disabled', true);
    setState(index, 'link1', 'disabled', true);
   }
  }
 }
});

addStateInit(rowIndex, 'link1', function(index, widgetId, widget, widgets, state) {
 if(state['disabled']) {
  widget.set('disabled', state['disabled']);
 }
});


addEvent(rowIndex, 'link3', 'onClick', function(index, widgetId, widget, rowWidgets) {
 for(var i = 0; i &lt; rowWidgets.length; i ++ ) {
  if(rowWidgets[i].cellWidgetId == 'button1') {
   if(rowWidgets[i].get('visibility') == 'visible') {
    rowWidgets[i].set('visibility', 'gone');
    setState(index, 'button1', 'visibility', 'gone');
   } else if(rowWidgets[i].get('visibility') == 'gone') {
    rowWidgets[i].set('visibility', 'visible');
    setState(index, 'button1', 'visibility', 'visible');
   }
  }
 }
});

addStateInit(rowIndex, 'button1', function(index, widgetId, widget, widgets, state) {
 if(state['visibility']) {
  widget.set('visibility', state['visibility']);
 }
});

var flag = parseInt(grid.store.getValue(grid.getItem(rowIndex), 'flag'));
console.log(flag);
var flagValue=flag % 3;
if(flagValue == 0) {
return 
'&lt;a cellWidgetId=\&quot;link1\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;#\&quot; text=\&quot;visibility\&quot;&gt;&lt;/a&gt;  | ' +
'&lt;a cellWidgetId=\&quot;link2\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;#\&quot; text=\&quot;disabled\&quot;&gt;&lt;/a&gt;  | ' +
'&lt;a cellWidgetId=\&quot;link3\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;#\&quot; text=\&quot;hidden \'visibility\' button\&quot;&gt;&lt;/a&gt; | ' +
'&lt;a cellWidgetId=\&quot;link4\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;#\&quot; text=\&quot;hidden Text widget\&quot;&gt;&lt;/a&gt;';

}
else if (flagValue  == 1){
return  
'&lt;a cellWidgetId=\&quot;submitLink1\&quot;  dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'linkin','flowEvent':'next' })  + '\&quot; action=\&quot;Request\&quot; text=\&quot;change flow Evt\&quot;&gt;&lt;/a&gt; | ' + 
'&lt;a cellWidgetId=\&quot;submitLink2\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'linkin','flowId':'IBK_4_11_mutiWidget_newFlow' })  + '\&quot; action=\&quot;Request\&quot; text=\&quot;new flow\&quot;&gt;&lt;/a&gt; | ' + 
'&lt;a cellWidgetId=\&quot;submitLink3\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'linkin','operationId':'IBK_4_11_MutiWidgetNewOp' })  + '\&quot; action=\&quot;Request\&quot; text=\&quot;new operation\&quot;&gt;&lt;/a&gt;';
} else if (flagValue  == 2){
return  
'&lt;a cellWidgetId=\&quot;URL1\&quot;  dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;http://www.baidu.com\&quot; text=\&quot;Open url to new window\&quot; target=\&quot;_blank\&quot; &gt;&lt;/a&gt; | ' + 
'&lt;a cellWidgetId=\&quot;URL2\&quot;  dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;http://www.baidu.com\&quot; text=\&quot;Open url to self\&quot; target=\&quot;_self\&quot; &gt;&lt;/a&gt;';

} 
}" headerHAlign="16384" colSpan="1" text="LinkFormatter" noresize="false" relativeWidth="1" id="columnId5" repeat="true" headerVAlign="16384">
                  <tableColumnAlignment>16384</tableColumnAlignment>
                </column>
                <column widthType="FixedSize" sortPriority="1" editable="false" level="1" rowSpan="1" widget="Content" width="240" rowCSS="" hidden="false" formatter="function(data, rowIndex, grid) {

addEvent(rowIndex, 'mixLink2', 'onClick', function(index, widgetId, widget, rowWidgets) {
 for(var i = 0; i &lt; rowWidgets.length; i ++ ) {
  if(rowWidgets[i].cellWidgetId == 'mixButton3') {
   if(rowWidgets[i].get('visibility') == 'visible') {
    rowWidgets[i].set('visibility', 'gone');
    setState(index, 'mixButton3', 'visibility', 'gone');
   } else if(rowWidgets[i].get('visibility') == 'gone') {
    rowWidgets[i].set('visibility', 'visible');
    setState(index, 'mixButton3', 'visibility', 'visible');
   }
  }
 }
});

addStateInit(rowIndex, 'mixButton3', function(index, widgetId, widget, widgets, state) {
 if(state['visibility']) {
  widget.set('visibility', state['visibility']);
 }
});

addEvent(rowIndex, 'mixButton5', 'onClick', function(index, widgetId, widget, rowWidgets) {
 for(var i = 0; i &lt; rowWidgets.length; i ++ ) {
  if(rowWidgets[i].cellWidgetId == 'mixButton6') {
   if(rowWidgets[i].get('visibility') == 'visible') {
    rowWidgets[i].set('visibility', 'gone');
    setState(index, 'mixButton6', 'visibility', 'gone');
   } else if(rowWidgets[i].get('visibility') == 'gone') {
    rowWidgets[i].set('visibility', 'visible');
    setState(index, 'mixButton6', 'visibility', 'visible');
   }
  }
 }
});

addStateInit(rowIndex, 'mixButton6', function(index, widgetId, widget, widgets, state) {
 if(state['visibility']) {
  widget.set('visibility', state['visibility']);
 }
});



var flag = parseInt(grid.store.getValue(grid.getItem(rowIndex), 'flag'));
var flagValue = flag % 4;
if(flagValue == 0) {
return 
'&lt;div cellWidgetId=\&quot;mixButton1\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new flow\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','flowId':'IBK_4_11_mutiWidget_newFlow' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;a cellWidgetId=\&quot;mixLink1\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;Request\&quot; text=\&quot;changeEvt\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'linkin','flowEvent':'next' })  + '\&quot;&gt;&lt;/a&gt; ' +
'&lt;div cellWidgetId=\&quot;mixButton2\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new operation\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','operationId':'IBK_4_11_MutiWidgetNewOp' })  +'\&quot;&gt;&lt;/div&gt;';
}
else if (flagValue == 1){
return  
'&lt;a cellWidgetId=\&quot;mixLink2\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;#\&quot; text=\&quot;gone reight widget\&quot;&gt;&lt;/a&gt;  ' +
'&lt;div cellWidgetId=\&quot;mixButton3\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;changeEvt\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','flowEvent':'next' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;mixButton4\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new operation\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','operationId':'IBK_4_11_MutiWidgetNewOp' })  +'\&quot;&gt;&lt;/div&gt;';
} else if (flagValue == 2){
return  

'&lt;div cellWidgetId=\&quot;mixButton5\&quot; type=\&quot;button\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;gone right widget\&quot;&gt;&lt;/div&gt;' +
'&lt;div cellWidgetId=\&quot;mixButton6\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;new flow\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','flowId':'IBK_4_11_mutiWidget_newFlow' })  +'\&quot;&gt;&lt;/div&gt;'  +
'&lt;a cellWidgetId=\&quot;mixLink3\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot;  action=\&quot;http://wwww.baidu.com\&quot; target=\&quot;_blank\&quot; text=\&quot;Url to new window\&quot;&gt;&lt;/a&gt;  ' ;
}else if (flagValue == 3){
return  
'&lt;a cellWidgetId=\&quot;mixLink4\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'linkin','flowId':'IBK_4_11_mutiWidget_newFlow' })  +'\&quot; text=\&quot;new flow\&quot;&gt;&lt;/a&gt;  ' +
'&lt;div cellWidgetId=\&quot;mixButton7\&quot; type=\&quot;submit\&quot; dojoType=\&quot;com.ibm.btt.dijit.Button\&quot; style=\&quot;margin:0px;\&quot; text=\&quot;changeEvt\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'submit','flowEvent':'next' })  +'\&quot;&gt;&lt;/div&gt;' +
'&lt;a cellWidgetId=\&quot;mixButton5\&quot; height=\&quot;13px\&quot; dojoType=\&quot;com.ibm.btt.dijit.Anchor\&quot; bttParams=\&quot;' + getBTTParamsStr({'type':'linkin','operationId':'IBK_4_11_MutiWidgetNewOp' })  +'\&quot; text=\&quot;new operation\&quot;&gt;&lt;/a&gt;  ';
}    
}" headerHAlign="16384" colSpan="1" text="MixFormatter" noresize="false" relativeWidth="1" id="columnId6" repeat="true" headerVAlign="16384">
                  <tableColumnAlignment>16384</tableColumnAlignment>
                </column>
              </widget>
              <gridLayout numColumns="0"/>
            </widget>
            <gridLayout numColumns="1"/>
          </container>
          <gridLayout numColumns="0"/>
        </widget>
        <widget name="PlaceHolder">
          <gridData heightType="AutoSize" widthType="AutoSize" relativeWidth="-1" relativeHeight="-1" inlineStyle="{}" horizontalIndentType="FixedSize"/>
          <gridLayout numColumns="0"/>
        </widget>
        <gridLayout numColumns="1"/>
      </container>
      <gridLayout numColumns="0"/>
    </widget>
    <gridLayout numColumns="1"/>
  </container>
  <rules>
    <rule name="ecaRule">
      <events>
        <event widget="table" event="onCellWidgetClick"/>
      </events>
      <condition>
        <value type="expression">
          <leftValue type="expression">
            <leftValue type="widgetProperty" widget="table" property="clickedWidgetId"/>
            <operator name="=="/>
            <rightValue type="constant" constant="'button4'"/>
          </leftValue>
          <operator name="and"/>
          <rightValue type="expression">
            <leftValue type="widgetProperty" widget="label01" property="visibility"/>
            <operator name="=="/>
            <rightValue type="constant" constant="'visible'"/>
          </rightValue>
        </value>
      </condition>
      <trueActions stopEventPagination="false">
        <action type="widgetProperty" widget="label01" property="visibility">
          <value type="constant" constant="'hidden'"/>
        </action>
      </trueActions>
      <falseActions stopEventPagination="false">
        <action type="actionGroup" name="labelFalse" method="execute()"/>
      </falseActions>
    </rule>
    <rule name="ecaRule01">
      <events>
        <event widget="table" event="onCellWidgetClick"/>
      </events>
      <condition>
        <value type="expression">
          <leftValue type="expression">
            <leftValue type="widgetProperty" widget="table" property="clickedWidgetId"/>
            <operator name="=="/>
            <rightValue type="constant" constant="'link4'"/>
          </leftValue>
          <operator name="and"/>
          <rightValue type="expression">
            <leftValue type="widgetProperty" widget="text01" property="visibility"/>
            <operator name="=="/>
            <rightValue type="constant" constant="'visible'"/>
          </rightValue>
        </value>
      </condition>
      <trueActions stopEventPagination="false">
        <action type="widgetProperty" widget="text01" property="visibility">
          <value type="constant" constant="'hidden'"/>
        </action>
      </trueActions>
      <falseActions stopEventPagination="false">
        <action type="actionGroup" name="textFalse" method="execute()"/>
      </falseActions>
    </rule>
  </rules>
  <groups>
    <actionGroup name="labelFalse">
      <condition>
        <value type="expression">
          <leftValue type="expression">
            <leftValue type="widgetProperty" widget="table" property="clickedWidgetId"/>
            <operator name="=="/>
            <rightValue type="constant" constant="'button4'"/>
          </leftValue>
          <operator name="and"/>
          <rightValue type="expression">
            <leftValue type="widgetProperty" widget="label01" property="visibility"/>
            <operator name="=="/>
            <rightValue type="constant" constant="'hidden'"/>
          </rightValue>
        </value>
      </condition>
      <trueActions>
        <action type="widgetProperty" widget="label01" property="visibility">
          <value type="constant" constant="'visible'"/>
        </action>
      </trueActions>
      <falseActions/>
    </actionGroup>
    <actionGroup name="textFalse">
      <condition>
        <value type="expression">
          <leftValue type="expression">
            <leftValue type="widgetProperty" widget="table" property="clickedWidgetId"/>
            <operator name="=="/>
            <rightValue type="constant" constant="'link4'"/>
          </leftValue>
          <operator name="and"/>
          <rightValue type="expression">
            <leftValue type="widgetProperty" widget="text01" property="visibility"/>
            <operator name="=="/>
            <rightValue type="constant" constant="'hidden'"/>
          </rightValue>
        </value>
      </condition>
      <trueActions>
        <action type="widgetProperty" widget="text01" property="visibility">
          <value type="constant" constant="'visible'"/>
        </action>
      </trueActions>
      <falseActions/>
    </actionGroup>
  </groups>
  <vrules/>
  <useECALoader>false</useECALoader>
  <versionNo>0</versionNo>
</XUI>