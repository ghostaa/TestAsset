package com.ibm.btt.test;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.ibm.btt.base.BTTServerOperation;
import com.ibm.btt.base.DSEInvalidArgumentException;
import com.ibm.btt.base.DSEObjectNotFoundException;
import com.ibm.btt.base.KeyedCollection;
/** 
 * Class Generated by BTT Tool
 * Created since: 2013/03/01 22:55:47
 */
public class IBKE2E_GetAccountDetails extends BTTServerOperation {
  /** 
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 */
  public void execute() throws Exception {
	  	KeyedCollection kc = this.getKeyedCollection();
		
		System.out.println("***************Begin to call IBKE2E_GetAccountDetails **********");
		
		String columnSelect = (String) kc.getValueAt("TableSelection.ColumnSelect");
		Long rowSelect = (Long) kc.getValueAt("TableSelection.RowSelect");
		
		System.out.println("Clicked Row: " + rowSelect + ", Column: " + columnSelect);
		
		// since we know which account is selected by user, we can get the transaction details by this account
		if (rowSelect!=null && rowSelect.intValue() == 0)
		{
			kc.setValueAt("AccountDetails.AccountNumber", "111111111");			
			buildTransactionDetails(kc, new SimpleDateFormat("yyyy-MM-dd").parse("2012-08-12"), "Debit", new Double (1000));
		}
		else if (rowSelect!=null && rowSelect.intValue() == 1)
		{
			kc.setValueAt("AccountDetails.AccountNumber", "222222222");			
			buildTransactionDetails(kc, new SimpleDateFormat("yyyy-MM-dd").parse("2013-01-28"), "Debit", new Double (300));
		}
		else if (rowSelect!=null && rowSelect.intValue() == 2)
		{
			kc.setValueAt("AccountDetails.AccountNumber", "333333333");			
			buildTransactionDetails(kc, new SimpleDateFormat("yyyy-MM-dd").parse("2011-11-02"), "Withdraw", new Double (200));
		}else {
			kc.setValueAt("AccountDetails.AccountNumber", "44444");			
			buildTransactionDetails(kc, new SimpleDateFormat("yyyy-MM-dd").parse("2011-11-02"), "Withdraw", new Double (200));
	
		}
		
		
		
		System.out.println("***************End to call IBKE2E_GetAccountDetails **********");
		
		fireExitEvent("ok");
	  
  }

private void buildTransactionDetails(KeyedCollection kc, Date date, String usage, Double amount)
		throws DSEInvalidArgumentException, DSEObjectNotFoundException {
	long cuTime = System.currentTimeMillis();
	for (int i = 0; i < 15; i++) {
		kc.setValueAt("AccountDetails.AccountDetailList." + i + ".Seq", new Integer(i+1));
		kc.setValueAt("AccountDetails.AccountDetailList." + i + ".TransactionID", new Long(cuTime + i));
		kc.setValueAt("AccountDetails.AccountDetailList." + i + ".TransactionDate", new Date(date.getTime() + i * 24 * 60 * 60 * 1000));
		kc.setValueAt("AccountDetails.AccountDetailList." + i + ".Usage", usage);
		kc.setValueAt("AccountDetails.AccountDetailList." + i + ".Amount", new Double(amount.doubleValue() + 10 * i));
	  }
	}
}
