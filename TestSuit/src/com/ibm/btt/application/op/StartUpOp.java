/*_
 * Licensed Materials - Property of IBM
 * Restricted Materials of IBM
 * 5724-H82
 * (C) Copyright IBM Corp. 2011 All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp
 */
package com.ibm.btt.application.op;

import com.ibm.btt.base.BTTServerOperation;
import com.ibm.btt.base.Context;
import com.ibm.btt.base.ContextFactory;
import com.ibm.btt.base.IndexedCollection;
import com.ibm.btt.base.KeyedCollection;

/**
 * Class Generated by BTT Tool Created since: 2010/12/13 17:36:42
 */
public class StartUpOp extends BTTServerOperation {
	@SuppressWarnings("unused")
	private static final java.lang.String COPYRIGHT = "Licensed Materials - Property of IBM "//$NON-NLS-1$
			+ "Restricted Materials of IBM "//$NON-NLS-1$
			+ "5724-H82 "//$NON-NLS-1$
			+ "(C) Copyright IBM Corp. 2008, 2010 All Rights Reserved. "//$NON-NLS-1$
			+ "US Government Users Restricted Rights - Use, duplication or disclosure "//$NON-NLS-1$
			+ "restricted by GSA ADP Schedule Contract with IBM Corp ";//$NON-NLS-1$

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 */
	public void execute() throws Exception {
		System.out.println("StartUpOp");
		Context root = ContextFactory.getRoot();

		if (root == null) {
			System.out.println("Creating root ctx");
			root = ContextFactory.createContext("branchServer");
		}

		Context sessionCtx = ContextFactory.createContext("sessionCtx");
		sessionCtx.chainTo(root);

		this.getContext().chainTo(sessionCtx);

		this.initMyPages();
	}

	private void initMyPages() throws Exception {
		System.out.println("Initializing My Pages data.");
		Context sessionCtx = getContextNamed("sessionCtx");
		if (null == sessionCtx) {
			throw new Exception("Session Context does not exist.");
		}

		KeyedCollection kc = getContext().getParent().getKeyedCollection();
		KeyedCollection myPages = (KeyedCollection) kc
				.tryGetElementAt("myPages");

		IndexedCollection availablePortlets = (IndexedCollection) myPages
				.tryGetElementAt("availablePortlets");
		IndexedCollection defaultContainer = (IndexedCollection) myPages
				.tryGetElementAt("defaultPortletsContainer");
		IndexedCollection currentContainer = (IndexedCollection) myPages
				.tryGetElementAt("currentPortletsContainer");
		IndexedCollection deployedPortlets = (IndexedCollection) myPages
				.tryGetElementAt("deployedPortlets");

		// add default available portlets
		// this part should be implemented by retrieving configuration data from
		// database
		availablePortlets.removeAll();
		KeyedCollection ap1 = (KeyedCollection) availablePortlets
				.createElement(false);
		ap1.trySetValueAt("title", "Account Transfer");
		ap1.trySetValueAt(
				"url",
				"Request?dse_sessionId=&dse_applicationId=-1&dse_pageId=1&dse_processorState=initial&dse_operationName=IBK_30_Test_XHTML_Index_Flow&dse_nextEventName=start&dse_timezone=8");
		ap1.trySetValueAt("instanceClosable", true);
		availablePortlets.addElement(ap1);

		KeyedCollection ap2 = (KeyedCollection) availablePortlets
				.createElement(false);
		ap2.trySetValueAt("title", "Account Transfer");
		ap2.trySetValueAt(
				"url",
				"Request?dse_sessionId=35348B8403D84BB22C01D1E52CDBBA03&dse_applicationId=-1&dse_pageId=1&dse_processorState=initial&dse_operationName=IBKE2E_TestFlowFlow&dse_nextEventName=start&dse_timezone=8");
		ap2.trySetValueAt("instanceClosable", true);
		availablePortlets.addElement(ap2);

		KeyedCollection ap3 = (KeyedCollection) availablePortlets
				.createElement(false);
		ap3.trySetValueAt("title", "Account Transfer");
		ap3.trySetValueAt(
				"url",
				"Request?dse_sessionId=35348B8403D84BB22C01D1E52CDBBA03&dse_applicationId=-1&dse_pageId=1&dse_processorState=initial&dse_operationName=IBKE2E_TestFlowFlow&dse_nextEventName=start&dse_timezone=8");
		ap3.trySetValueAt("instanceClosable", true);
		availablePortlets.addElement(ap3);

		KeyedCollection ap4 = (KeyedCollection) availablePortlets
				.createElement(false);
		ap4.trySetValueAt("title", "Account Transfer");
		ap4.trySetValueAt(
				"url",
				"Request?dse_sessionId=35348B8403D84BB22C01D1E52CDBBA03&dse_applicationId=-1&dse_pageId=1&dse_processorState=initial&dse_operationName=IBKE2E_TestFlowFlow&dse_nextEventName=start&dse_timezone=8");
		ap4.trySetValueAt("instanceClosable", false);
		availablePortlets.addElement(ap4);

		KeyedCollection ap5 = (KeyedCollection) availablePortlets
				.createElement(false);
		ap5.trySetValueAt("title", "Account Transfer");
		ap5.trySetValueAt(
				"url",
				"Request?dse_sessionId=35348B8403D84BB22C01D1E52CDBBA03&dse_applicationId=-1&dse_pageId=1&dse_processorState=initial&dse_operationName=IBKE2E_TestFlowFlow&dse_nextEventName=start&dse_timezone=8");
		ap5.trySetValueAt("instanceClosable", false);
		availablePortlets.addElement(ap5);

		// set up container columns
		currentContainer.removeAll();
		KeyedCollection col1 = (KeyedCollection) currentContainer
				.createElement(false);
		col1.trySetValueAt("index", 0);
		col1.trySetValueAt("width", "20");
		currentContainer.addElement(col1);

		KeyedCollection col2 = (KeyedCollection) currentContainer
				.createElement(false);
		col2.trySetValueAt("index", 1);
		col2.trySetValueAt("width", "70");
		currentContainer.addElement(col2);

		// set up deployed portlets
		deployedPortlets.removeAll();
		KeyedCollection dp1 = (KeyedCollection) deployedPortlets
				.createElement(false);
		dp1.trySetValueAt("title", "Account Transfer");
		dp1.trySetValueAt(
				"url",
				"Request?dse_sessionId=35348B8403D84BB22C01D1E52CDBBA03&dse_applicationId=-1&dse_pageId=1&dse_processorState=initial&dse_operationName=IBKE2E_TestFlowFlow&dse_nextEventName=start&dse_timezone=8");
		dp1.trySetValueAt("closable", true);
		dp1.trySetValueAt("open", true);
		dp1.trySetValueAt("content", null);
		dp1.trySetValueAt("columnId", 0);
		dp1.trySetValueAt("rowId", 0);
		deployedPortlets.addElement(dp1);

		KeyedCollection dp2 = (KeyedCollection) deployedPortlets
				.createElement(false);
		dp2.trySetValueAt("title", "Account Transfer");
		dp2.trySetValueAt(
				"url",
				"Request?dse_sessionId=35348B8403D84BB22C01D1E52CDBBA03&dse_applicationId=-1&dse_pageId=1&dse_processorState=initial&dse_operationName=IBKE2E_TestFlowFlow&dse_nextEventName=start&dse_timezone=8");
		dp2.trySetValueAt("closable", true);
		dp2.trySetValueAt("open", true);
		dp2.trySetValueAt("content", null);
		dp2.trySetValueAt("columnId", 0);
		dp2.trySetValueAt("rowId", 1);
		deployedPortlets.addElement(dp2);

		KeyedCollection dp3 = (KeyedCollection) deployedPortlets
				.createElement(false);
		dp3.trySetValueAt("title", "Account Transfer");
		dp3.trySetValueAt(
				"url",
				"Request?dse_sessionId=35348B8403D84BB22C01D1E52CDBBA03&dse_applicationId=-1&dse_pageId=1&dse_processorState=initial&dse_operationName=IBKE2E_TestFlowFlow&dse_nextEventName=start&dse_timezone=8");
		dp3.trySetValueAt("closable", true);
		dp3.trySetValueAt("open", true);
		dp3.trySetValueAt("content", null);
		dp3.trySetValueAt("columnId", 1);
		dp3.trySetValueAt("rowId", 0);
		deployedPortlets.addElement(dp3);

		System.out.println(getContext().getParent().getKeyedCollection());

		System.out.println("Initialized My Pages data.");
	}
}
