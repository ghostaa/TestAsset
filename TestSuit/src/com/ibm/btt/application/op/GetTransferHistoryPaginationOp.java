package com.ibm.btt.application.op;

import java.util.Random;

import com.ibm.btt.base.BTTServerOperation;
import com.ibm.btt.base.IndexedCollection;
import com.ibm.btt.base.KeyedCollection;

/**
 * Class Generated by BTT Tool Created since: 2013/05/03 16:09:48
 */
public class GetTransferHistoryPaginationOp extends BTTServerOperation {
	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 */
	Random ran = new Random();
	private int rowsPerPage = 10;
	private int total;
	private int pageNumber;
	private int pageSize;

	public void execute() throws Exception {
		KeyedCollection k = this.getContext().getKeyedCollection();
		// pagination logic
		KeyedCollection paginationData = (KeyedCollection) k.getElementAt("paginationData");
		IndexedCollection historyList = (IndexedCollection) k.getElementAt("transferHistory");
		historyList.removeAll();
//		rowsPerPage = (Integer) paginationData.getValueAt("rowsPerPage");
		pageNumber = (Integer) paginationData.getValueAt("pageNumber");
//		total = (Integer) paginationData.getValueAt("totalRowNumber");
//		total = historyList.size();
		TransferHistoryDB historyDB = TransferHistoryDB.getInstance();
		IndexedCollection allHistory = historyDB.getAllHistory();
		total = allHistory.size();
		pageSize = total / rowsPerPage;
		if (total % rowsPerPage > 0)
		{
			pageSize++;
		}

		paginationData.setValueAt("totalRowNumber", total);
		paginationData.setValueAt("pageNumber", pageNumber);

		if (pageNumber <= 1)
		{
			paginationData.setValueAt("enableNext", "true");
			paginationData.setValueAt("enablePrevious", "false");
		}
		else if (pageNumber == pageSize)
		{
			paginationData.setValueAt("enableNext", "false");
			paginationData.setValueAt("enablePrevious", "true");
		}
		else
		{
			paginationData.setValueAt("enableNext", "true");
			paginationData.setValueAt("enablePrevious", "true");
		}
		
		// business data
		int fromRowNum = (pageNumber-1) * rowsPerPage;
		int toRowNum;
		if(pageNumber != pageSize || total % rowsPerPage == 0){
			toRowNum = pageNumber * rowsPerPage;
		}else{
			toRowNum = fromRowNum + total % rowsPerPage;
		}
		historyList = historyDB.getAppointedHistory(fromRowNum, toRowNum, historyList);
	}
}
