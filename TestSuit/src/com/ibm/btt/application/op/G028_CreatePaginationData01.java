package com.ibm.btt.application.op;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import com.ibm.btt.base.BTTServerOperation;
import com.ibm.btt.base.Context;
import com.ibm.btt.base.IndexedCollection;
import com.ibm.btt.base.KeyedCollection;

/**
 * Class Generated by BTT Tool Created since: 2012/09/18 11:04:01
 */
public class G028_CreatePaginationData01 extends BTTServerOperation
{
	private int rowsPerPage;
	private int total;
	private int pageNumber;
	private int pageSize;
	private boolean pagination;

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 */
	private Random rand = new Random();
	public void execute() throws Exception
	{

		Context ctx = getContext();
		KeyedCollection opData = this.getContext().getKeyedCollection();
		IndexedCollection accounts = (IndexedCollection) opData.getElementAt("accounts_01");
		
		Object o = ctx.getValueAt("paginationData_01");

		if (o == null)
			this.pagination = false;
		else
			this.pagination = true;

		if (pagination)
		{
			rowsPerPage = (Integer) ctx.getValueAt("paginationData_01.rowsPerPage_01");
			pageNumber = (Integer) ctx.getValueAt("paginationData_01.pageNumber_01");
			total = (Integer) ctx.getValueAt("paginationData_01.totalRowNumber_01");

			pageSize = total / rowsPerPage;
			if (total % rowsPerPage > 0)
			{
				pageSize++;
			}

			ctx.setValueAt("paginationData_01.totalRowNumber_01", total);
			ctx.setValueAt("paginationData_01.pageNumber_01", pageNumber);

			if (pageNumber <= 1)
			{
				ctx.setValueAt("paginationData_01.enableNext_01", "true");
				ctx.setValueAt("paginationData_01.enablePrevious_01", "false");
			}
			else if (pageNumber == pageSize)
			{
				ctx.setValueAt("paginationData_01.enableNext_01", "false");
				ctx.setValueAt("paginationData_01.enablePrevious_01", "true");
			}
			else
			{
				ctx.setValueAt("paginationData_01.enableNext_01", "true");
				ctx.setValueAt("paginationData_01.enablePrevious_01", "true");
			}
		}
		
		Object en = ctx.getValueAt("paginationData_01.enableNext_01");
		System.out.println("paginationData_01.enableNext_01 is : -----------------------------------------------------------------------------------------------------" + en);
//		System.out.println(accountTable.toString());
		System.out.println("accountTable is : -----------------------------------------------------------------------------------------------------");
		
		// save changed value
		//AccountListDB.saveAccountList(accountTable, toSavePageNumber);

		// set value		
//		AccountListDB.getAllAccountList(pageNumber, accountTable);
		Map<Integer, String> businessNameMap = new HashMap<Integer, String>();
		businessNameMap.put(0, "savings");
		businessNameMap.put(1, "credit");
		businessNameMap.put(2, "mortgage");
		for (int i = 0; i < accounts.size(); i++) {
			accounts.setValueAt(i + ".idx", pageNumber > 1 ? (pageNumber -1) *10 + i : i);
			accounts.setValueAt(i + ".acctNum", "222345678" + (pageNumber > 1 ? (pageNumber -1) *10 + i : "0" + i));
			accounts.setValueAt(i + ".name",
					businessNameMap.get(rand.nextInt(3)));
			accounts.setValueAt(i + ".balance", rand.nextFloat() * 900000);
		}
		fireExitEvent("ok");
	}
}
