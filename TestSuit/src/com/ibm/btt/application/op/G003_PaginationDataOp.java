package com.ibm.btt.application.op;

import java.util.Date;
import java.util.Random;

import com.ibm.btt.base.BTTServerOperation;
import com.ibm.btt.base.IndexedCollection;
import com.ibm.btt.base.KeyedCollection;

/**
 * Class Generated by BTT Tool Created since: 2013/04/24 16:49:50
 */
public class G003_PaginationDataOp extends BTTServerOperation {
	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 */
	private int rowsPerPage;
	private int total;
	private int pageNumber;
	private int pageSize;
	private boolean pagination;

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 */
	private Random rand = new Random();

	public void execute() throws Exception {

		KeyedCollection opData = this.getContext().getKeyedCollection();

		KeyedCollection paginationData = (KeyedCollection) opData
				.getElementAt("paginationData");

		if (paginationData == null)
			this.pagination = false;
		else
			this.pagination = true;

		if (pagination) {
			rowsPerPage = (Integer) paginationData.getValueAt("rowsPerPage");
			pageNumber = (Integer) paginationData.getValueAt("pageNumber");
			total = (Integer) paginationData.getValueAt("totalRowNumber");

			pageSize = total / rowsPerPage;
			if (total % rowsPerPage > 0) {
				pageSize++;
			}

			paginationData.setValueAt("pageNumber", pageNumber);

			if (pageNumber <= 1) {
				paginationData.setValueAt("enableNext", "true");
				paginationData.setValueAt("enablePrevious", "false");
			} else if (pageNumber == pageSize) {
				paginationData.setValueAt("enableNext", "false");
				paginationData.setValueAt("enablePrevious", "true");
			} else {
				paginationData.setValueAt("enableNext", "true");
				paginationData.setValueAt("enablePrevious", "true");
			}
		}

		// save changed value
		// AccountListDB.saveAccountList(accountTable, toSavePageNumber);

		// set value
		// AccountListDB.getAllAccountList(pageNumber, accountTable);
		IndexedCollection testList = (IndexedCollection) opData.getElementAt("G003_test_List");
		for (int i = 0; i < 10; i++) {

			testList.setValueAt( i + ".task name", "task "
					+ (pageNumber > 1 ? (pageNumber -1) *10 + i : "0" + i));
			testList.setValueAt( i + ".due date", new Date());
			testList.setValueAt( i + ".completed", i % 3 == 1 ? false : true);
			testList.setValueAt( i + ".working", i % 2 == 1 ? true : false);
		}
	}
}
