package com.ibm.btt.application.op.Q005.server;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.Random;

import com.ibm.btt.base.BTTServerOperation;
import com.ibm.btt.base.Context;
import com.ibm.btt.base.IndexedCollection;
import com.ibm.btt.base.KeyedCollection;
import com.ibm.btt.test.util.DateUtilForTest;

/** 
 * Class Generated by BTT Tool
 * Created since: 2013/07/25 10:53:26
 */
public class Q005_TestFilterOp extends BTTServerOperation {
  /** 
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 */
	
	Random rand = new Random();
  public void execute() throws Exception {
	  System.out.println("###############  TestOp context:" +this.getKeyedCollection());
	  
	  Context c = this.getContext();
	  KeyedCollection krecord = c.getKeyedCollection();
	  KeyedCollection kc = (KeyedCollection) krecord.getElementAt("testRecord");
	  // set value for testRecord;
	  setValueForKColl(kc);
	  System.out.println(kc);
	  
	  IndexedCollection ic = (IndexedCollection) krecord.getElementAt("testList");
	  setValueForIcoll(ic);
	  System.out.println(ic);
  }
  
  public void setValueForKColl(KeyedCollection kc) throws Exception{
	  kc.setValueAt("TestField","hello world, this is a field");
	  kc.setValueAt("StringData","this is a string");
	  
	  kc.setValueAt("DateData",new Date());
	  //not support currency
//	  kc.setValueAt("CurrencyData",new Currency("CNY", new BigDecimal(2345)));
	  kc.setValueAt("NumberData",new BigDecimal(12121212));
	  kc.setValueAt("BooleanData",true);
	  
	  // ByteArray how to use
//	  ByteArray ba = new ByteArray();
//	  ba.write(9001);
//	  kc.setValueAt("ByteArrayData", ba);
	  
	  // not support Duration
//	  kc.setValueAt("DurationData",DatatypeFactory.newInstance().newDuration(1234567890) );
	  kc.setValueAt("XMLGregorianCalendarData",DateUtilForTest.getXGC());
	  kc.setValueAt("ByteData",(byte) rand.nextInt(127));
	  kc.setValueAt("ShortData",(short)rand.nextInt(1000));
	  kc.setValueAt("IntegerData",rand.nextInt());
	  kc.setValueAt("LongData",rand.nextLong());
	  kc.setValueAt("FloatData",rand.nextFloat());
	  kc.setValueAt("DoubleData",rand.nextDouble());
	  
	  kc.setValueAt("BigIntegerData",new BigInteger("12345"));
	  kc.setValueAt("BigDecimalData",new BigDecimal(1234456777.54544));
  }
  
  public void setValueForIcoll(IndexedCollection ic) throws Exception{
	  KeyedCollection ic0 = (KeyedCollection)ic.getElementAt(0);
	  setValueForKColl(ic0);
	  for (int i = 0 ; i < 4; i++){
		  KeyedCollection k = new KeyedCollection();
		  k.setDynamic(true);
		  setValueForKColl(k);
		  ic.addElement(k);
	  }
  }
  
}
